{"version":3,"file":"editor-to-word.esm.js","sources":["../src/default.ts","../src/utils.ts","../src/token/styleMap.ts","../src/token/backgroundColor.ts","../src/token/superScript.ts","../src/token/subScript.ts","../src/token/color.ts","../src/token/width.ts","../src/token/verticalAlign.ts","../src/token/textDecoration.ts","../src/token/padding.ts","../src/token/lineHeight.ts","../src/token/height.ts","../src/token/textAlign.ts","../src/token/bold.ts","../src/token/borderColor.ts","../src/token/fontFamily.ts","../src/token/fontStyle.ts","../src/token/textIndent.ts","../src/judge.ts","../src/token/index.ts","../src/isNodeType.ts","../src/builder/text.ts","../src/builder/table.ts","../src/builder/index.ts","../src/index.ts"],"sourcesContent":["import {\r\n  AlignmentType,\r\n  BorderStyle,\r\n  PageOrientation,\r\n  VerticalAlign,\r\n} from 'docx';\r\n\r\nimport { IPageLayout } from './types';\r\n\r\nexport const Splitter_Colon = ':';\r\n\r\nexport const Splitter_Semicolon = ';';\r\n\r\n// px by twips\r\nexport const PXbyTWIPS = 16;\r\n\r\n// px by pt\r\nexport const PXbyPT = 3 / 4;\r\n\r\n// default font size in px\r\nexport const D_FontSizePX = 16.3;\r\n\r\n// default font size in pt\r\nexport const D_FontSizePT = D_FontSizePX * PXbyPT;\r\n\r\n// default line height\r\nexport const D_LineHeight = 1.5;\r\n\r\n// default page width in px\r\nexport const D_PageWidthPX = 794;\r\n\r\n// default page height in px\r\nexport const D_PageHeightPX = 1123;\r\n\r\n// default page padding width in px\r\nexport const D_PagePaddingPX = 71;\r\n\r\n// default page table full width in px\r\nexport const D_PageTableFullWidth = 642;\r\n\r\n// default table full width in DXA\r\nexport const D_TableFullWidth = 9035;\r\n\r\nexport const D_TableBorderColor = '444444';\r\n\r\n// a4 paper size\r\nexport const A4MillimetersWidth = 145.4;\r\n\r\n// table cell margin in twips\r\nexport const D_CELL_MARGIN = 1 * PXbyTWIPS;\r\n\r\n// table border width in px\r\nexport const D_TableBorderSize = 2;\r\n\r\n// table cell height in px\r\nexport const D_TableCellHeightPx = 18;\r\n\r\n// font family SimSun\r\nexport const FontSongTi = ['SimSun', '宋体', 'Songti SC', 'NSimSun', 'STSong'];\r\n\r\n// text-align\r\nexport const AlignMap = {\r\n  left: AlignmentType.LEFT,\r\n  center: AlignmentType.CENTER,\r\n  right: AlignmentType.RIGHT,\r\n};\r\n\r\nexport const hyperlinkColor = '#007AFF';\r\n\r\n// style with tag\r\nexport const D_TagStyleMap = {\r\n  p: `line-height: ${D_LineHeight};`,\r\n  strong: 'font-weight: bold;',\r\n  em: 'font-style: italic;',\r\n  u: 'text-decoration: underline;',\r\n  del: 'text-decoration: line-through;',\r\n  h1: `font-weight: bold; font-size: 40px; line-height: ${D_LineHeight};`,\r\n  h2: `font-weight: bold; font-size: 36px; line-height: ${D_LineHeight};`,\r\n  h3: `font-weight: bold; font-size: 24px; line-height: ${D_LineHeight};`,\r\n  h4: `font-weight: bold; font-size: 18px; line-height: ${D_LineHeight};`,\r\n  h5: `font-weight: bold; font-size: 15px; line-height: ${D_LineHeight};`,\r\n  h6: `font-weight: bold; font-size: 13px; line-height: ${D_LineHeight};`,\r\n  sub: 'subscript: true;',\r\n  sup: 'superscript: true;',\r\n  a: `text-decoration: underline; color: ${hyperlinkColor};`,\r\n};\r\n\r\n// default paper layout\r\nexport const D_Layout: IPageLayout = {\r\n  bottomMargin: '2.54cm',\r\n  leftMargin: '3.18cm',\r\n  rightMargin: '3.18cm',\r\n  topMargin: '2.54cm',\r\n  orientation: PageOrientation.PORTRAIT,\r\n};\r\n\r\n// Direction\r\nexport const Direction = {\r\n  left: 'left',\r\n  right: 'right',\r\n  firstLine: 'firstLine',\r\n  start: 'start',\r\n  end: 'end',\r\n  hanging: 'hanging',\r\n};\r\n\r\nexport const PaddingDirection = {\r\n  'padding-left': Direction.left,\r\n  'padding-right': Direction.right,\r\n  'padding-top': Direction.start,\r\n  'padding-bottom': Direction.end,\r\n};\r\n\r\n// Size\r\nexport const Size = {\r\n  em: 'em',\r\n  px: 'px',\r\n  pt: 'pt',\r\n};\r\n\r\n// single line\r\nexport const SingleLine = { type: 'single', color: '3d4757' };\r\n\r\nexport const TagType = {\r\n  table: 'table',\r\n  link: 'a',\r\n  text: 'text',\r\n  img: 'img',\r\n  ordered_list: 'ol',\r\n  unordered_list: 'ul',\r\n};\r\n\r\n// default border style\r\nexport const DefaultBorder = {\r\n  style: BorderStyle.SINGLE,\r\n  size: 0,\r\n  color: '#fff',\r\n};\r\n\r\n// table cell vertical align map\r\nexport const verticalAlignMap = {\r\n  top: VerticalAlign.TOP,\r\n  middle: VerticalAlign.CENTER,\r\n  bottom: VerticalAlign.BOTTOM,\r\n};\r\n","import { convertMillimetersToTwip } from 'docx';\r\nimport tinycolor from 'tinycolor2';\r\n\r\nfunction typeOf(obj: unknown) {\r\n  const toString = Object.prototype.toString;\r\n  const map = {\r\n    '[object Boolean]': 'boolean',\r\n    '[object Number]': 'number',\r\n    '[object String]': 'string',\r\n    '[object Function]': 'function',\r\n    '[object Array]': 'array',\r\n    '[object Date]': 'date',\r\n    '[object RegExp]': 'regExp',\r\n    '[object Undefined]': 'undefined',\r\n    '[object Null]': 'null',\r\n    '[object Object]': 'object',\r\n  };\r\n  // @ts-ignore\r\n  return map[toString.call(obj)];\r\n}\r\n\r\nexport { typeOf };\r\n\r\nexport const isFilledArray = (arr: unknown) => {\r\n  return Array.isArray(arr) && arr.length > 0;\r\n};\r\n\r\n// unique array by given key\r\nexport const getUniqueArrayByKey = <T>(arr: T[], uniqueKey = 'id'): T[] => {\r\n  const isEveryObject = arr.every((item) => typeOf(item) === 'object');\r\n  if (!isFilledArray(arr) || arr.length === 1 || !isEveryObject) return arr;\r\n  const hash: T[keyof T][] = [];\r\n  return arr.reduce((item, next) => {\r\n    const k = next[uniqueKey as keyof typeof next];\r\n    if (k && !hash.includes(k)) {\r\n      hash.push(k);\r\n      item.push(next);\r\n    }\r\n    return item;\r\n  }, [] as T[]);\r\n};\r\n\r\nexport const removeTagDIV = (str: string) => {\r\n  const reg = /<div[^>]*?>|<\\/div>/gi;\r\n  return str.replace(reg, '');\r\n};\r\n\r\nexport const escape2Html = (str: string) => {\r\n  const arrEntities = { lt: '<', gt: '>', nbsp: ' ', amp: '&', quot: '\"' };\r\n  return str.replace(/&(lt|gt|nbsp|amp|quot);/gi, function (_, t) {\r\n    // @ts-ignore\r\n    return arrEntities[t];\r\n  });\r\n};\r\n\r\nexport const trimHtml = (str: string) => {\r\n  return removeTagDIV(escape2Html(str));\r\n};\r\n\r\nexport const deepCopyByJSON = <T>(obj: T) =>\r\n  JSON.parse(JSON.stringify(obj)) as T;\r\n\r\nexport const isValidColor = (color: string) => tinycolor(color).isValid();\r\n\r\nexport const toHex = (color: string) => tinycolor(color).toHexString();\r\n\r\nimport { SizeNumber } from './types';\r\n\r\n/**\r\n * parse size\r\n */\r\nexport const handleSizeNumber = (val: string): SizeNumber => {\r\n  const m = val.match(/\\d+(.\\d+)?/g);\r\n  if (val.match(/\\d+(.\\d+)?/g) && m && Array.isArray(m) && m[0]) {\r\n    const target = m[0];\r\n    const type = target ? val.replace(new RegExp(target, 'g'), '') : '';\r\n    return { value: parseFloat(target), type };\r\n  }\r\n  return { type: 'UNKNOWN', value: 0 };\r\n};\r\n\r\n// parse '2.54cm' to 2.54\r\nexport const numberCM = (size: string) =>\r\n  parseFloat(size?.toUpperCase().replace(/CM/i, ''));\r\n\r\n// calc margin in twip\r\nexport const calcMargin = (margin: string) =>\r\n  convertMillimetersToTwip(10 * numberCM(margin));\r\n\r\nexport const optimizeBlankSpace = (content: string, ratio = 1) => {\r\n  const textWithoutBlank = content.trimEnd();\r\n  const blank = content.slice(textWithoutBlank.length);\r\n  const optimizedBlank =\r\n    ratio === 1 ? blank : new Array(blank.length * ratio).fill(' ').join('');\r\n  const text =\r\n    blank.length > 1 ? `${textWithoutBlank}${optimizedBlank}` + '\\t' : content;\r\n  return text;\r\n};\r\n\r\nexport const getImageBlob = async (src: string) => {\r\n  const blob = await fetch(src).then((res) => res.blob());\r\n  return blob;\r\n};\r\n","// style map\r\nexport const StyleMap = {\r\n  fontFamily: 'font-family',\r\n  textAlign: 'text-align',\r\n  paddingRight: 'padding-right',\r\n  paddingLeft: 'padding-left',\r\n  lineHeight: 'line-height',\r\n  fontSize: 'font-size',\r\n  color: 'color',\r\n  backgroundColor: 'background-color',\r\n  textDecoration: 'text-decoration',\r\n  textIndent: 'text-indent',\r\n  borderColor: 'border-color',\r\n  height: 'height',\r\n  width: 'width',\r\n  fontWeight: 'font-weight',\r\n  verticalAlign: 'vertical-align',\r\n  lineThrough: 'line-through',\r\n  underline: 'underline',\r\n  fontStyle: 'font-style',\r\n  subScript: 'subscript',\r\n  superScript: 'superscript',\r\n};\r\n","import { ShadingType } from 'docx';\r\nimport { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const backgroundHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.shading = {\r\n    type: ShadingType.CLEAR,\r\n    fill: val.replace(/#/g, ''),\r\n  };\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const superScriptHandler: TokenHandler = (_, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.superScript = true;\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const subScriptHandler: TokenHandler = (_, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.subScript = true;\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const colorHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.color = val.replace(/#/g, '');\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const widthHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  const w = parseFloat(val.replace(/%/i, ''));\r\n  styleOption.tWidth = w;\r\n\r\n  return styleOption;\r\n};\r\n","import { verticalAlignMap } from '../default';\r\nimport { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const verticalAlignHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.verticalAlign =\r\n    verticalAlignMap[val as keyof typeof verticalAlignMap];\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\nimport { StyleMap } from './styleMap';\r\nimport { SingleLine } from '../default';\r\n\r\nexport const textDecorationHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n  if (val === StyleMap.lineThrough) {\r\n    styleOption.strike = true;\r\n  } else if (val === StyleMap.underline) {\r\n    styleOption.underline = SingleLine;\r\n  }\r\n  return styleOption;\r\n};\r\n","import { D_FontSizePX } from './../default';\r\nimport {\r\n  D_FontSizePT,\r\n  PXbyPT,\r\n  PXbyTWIPS,\r\n  Size,\r\n  Direction,\r\n  PaddingDirection,\r\n} from '../default';\r\nimport { handleSizeNumber } from '../utils';\r\nimport { IndentType } from '../types';\r\nimport { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const paddingHandler: TokenHandler = ({ key, val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n  type Dire = keyof typeof Direction;\r\n  const dire =\r\n    PaddingDirection[key as keyof typeof PaddingDirection] || Direction.left;\r\n  const { value, type } = handleSizeNumber(val);\r\n\r\n  // handle indent\r\n  const indent: IndentType = {};\r\n\r\n  const size = styleOption.size || D_FontSizePX;\r\n\r\n  const oneCharSizePT = (size / PXbyPT / 2) * PXbyTWIPS;\r\n\r\n  const isEM = type.match(Size.em);\r\n  const isPX = type.match(Size.px);\r\n  const isPT = type.match(Size.pt);\r\n\r\n  let indentValue = 0;\r\n\r\n  if (isEM) {\r\n    indentValue = value * oneCharSizePT;\r\n  } else if (isPX) {\r\n    indentValue = (value / 20) * oneCharSizePT;\r\n  } else if (isPT) {\r\n    indentValue = (value / D_FontSizePT) * oneCharSizePT;\r\n  }\r\n\r\n  indent[dire as Dire] = indentValue;\r\n  styleOption.indent = indent;\r\n\r\n  return styleOption;\r\n};\r\n","import { LineRuleType } from 'docx';\r\nimport { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\nimport { handleSizeNumber } from '../utils';\r\nimport { SpacingType } from '../types';\r\n\r\nexport const lineHeightHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  const spacing: SpacingType = {};\r\n  const { value, type } = handleSizeNumber(val);\r\n\r\n  const lineHeightToSpace = 240;\r\n\r\n  const isPx = type.toLowerCase() === 'px';\r\n  const isPr = type.toLowerCase() == '%';\r\n\r\n  let lineHeightVal = value;\r\n\r\n  if (isPx && value) {\r\n    lineHeightVal = value / 16;\r\n  } else if (isPr) {\r\n    lineHeightVal = value / 100;\r\n  }\r\n  // when line-height is 1.0 these is no need to set spacing\r\n  const isNoSpacing = lineHeightVal == 1;\r\n\r\n  if (value && !isNoSpacing) {\r\n    const s = lineHeightVal * lineHeightToSpace;\r\n    spacing.line = s;\r\n    spacing.lineRule = LineRuleType.AUTO;\r\n  }\r\n  styleOption.spacing = spacing;\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const heightHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  const h = parseFloat(val.replace(/px/i, ''));\r\n  styleOption.tHeight = h;\r\n\r\n  return styleOption;\r\n};\r\n","import { AlignmentType } from 'docx';\r\nimport { deepCopyByJSON } from '../utils';\r\nimport { TokenHandler } from './types';\r\nimport { AlignMap } from '../default';\r\n\r\nexport const alignHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.alignment =\r\n    AlignMap[val as keyof typeof AlignMap] || AlignmentType.LEFT;\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const boldHandler: TokenHandler = (_, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.bold = true;\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const borderColorHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.borderColor = val.replace(/#/i, '');\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const fontFamilyHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  if (val.indexOf(',') === -1 && val.indexOf(' ') === -1) {\r\n    styleOption.font = val;\r\n  }\r\n\r\n  return styleOption;\r\n};\r\n","import { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const fontStyleHandler: TokenHandler = (_, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n\r\n  styleOption.italics = true;\r\n\r\n  return styleOption;\r\n};\r\n","import { D_FontSizePX } from './../default';\r\nimport { D_FontSizePT, PXbyPT, PXbyTWIPS, Size } from '../default';\r\nimport { handleSizeNumber } from '../utils';\r\nimport { IndentType } from '../types';\r\nimport { deepCopyByJSON } from './../utils';\r\nimport { TokenHandler } from './types';\r\n\r\nexport const textIndentHandler: TokenHandler = ({ val }, styleOp) => {\r\n  const styleOption = deepCopyByJSON(styleOp);\r\n  const { value, type } = handleSizeNumber(val);\r\n\r\n  const indent: IndentType = {};\r\n\r\n  const size = styleOption.size || D_FontSizePX;\r\n\r\n  const oneCharSizePT = (size / PXbyPT / 2) * PXbyTWIPS;\r\n\r\n  const isEM = type.match(Size.em);\r\n  const isPX = type.match(Size.px);\r\n  const isPT = type.match(Size.pt);\r\n\r\n  let indentValue = 0;\r\n  if (isEM) {\r\n    indentValue = value * oneCharSizePT;\r\n  } else if (isPX) {\r\n    indentValue = (value / 20) * oneCharSizePT;\r\n  } else if (isPT) {\r\n    indentValue = (value / D_FontSizePT) * oneCharSizePT;\r\n  }\r\n  // for now only support firstLine for the reason that it is the only one in web\r\n  indent.firstLine = indentValue;\r\n  styleOption.indent = indent;\r\n\r\n  return styleOption;\r\n};\r\n","import { StyleMap } from './token/styleMap';\r\n\r\nimport { StyleInterface } from './types';\r\n\r\nexport const isColor = ({ key }: StyleInterface) => key === StyleMap.color;\r\n\r\nexport const isBackgroundColor = ({ key }: StyleInterface) =>\r\n  key === StyleMap.backgroundColor;\r\n\r\nexport const isTextDecoration = ({ key }: StyleInterface) =>\r\n  key === StyleMap.textDecoration;\r\n\r\nexport const isPadding = ({ key }: StyleInterface) =>\r\n  key.indexOf('padding-') > -1;\r\n\r\nexport const isTextAlign = ({ key }: StyleInterface) =>\r\n  key.indexOf(StyleMap.textAlign) > -1;\r\n\r\nexport const isLineHeight = ({ key }: StyleInterface) =>\r\n  key === StyleMap.lineHeight;\r\n\r\nexport const isFontFamily = ({ key }: StyleInterface) =>\r\n  key === StyleMap.fontFamily;\r\n\r\nexport const isVerticalAlign = ({ key }: StyleInterface) =>\r\n  key === StyleMap.verticalAlign;\r\n\r\nexport const isBorderColor = ({ key }: StyleInterface) =>\r\n  key === StyleMap.borderColor;\r\n\r\nexport const isWidth = ({ key }: StyleInterface) => key === StyleMap.width;\r\n\r\nexport const isHeight = ({ key }: StyleInterface) => key === StyleMap.height;\r\n\r\nexport const isTextIndent = ({ key }: StyleInterface) =>\r\n  key === StyleMap.textIndent;\r\n\r\nexport const isFontWeight = ({ key }: StyleInterface) =>\r\n  key === StyleMap.fontWeight;\r\n\r\nexport const isBold = ({ key, val }: StyleInterface) =>\r\n  key === StyleMap.fontWeight && val.toLowerCase() === 'bold';\r\n\r\nexport const isFontStyle = ({ key }: StyleInterface) =>\r\n  key === StyleMap.fontStyle;\r\n\r\nexport const isFontStyleItalic = ({ key, val }: StyleInterface) =>\r\n  key === StyleMap.fontStyle && val.toLowerCase() === 'italic';\r\n\r\nexport const isSubScript = ({ key, val }: StyleInterface) =>\r\n  key === StyleMap.subScript && val.toLowerCase() === 'true';\r\n\r\nexport const isSuperScript = ({ key, val }: StyleInterface) =>\r\n  key === StyleMap.superScript && val.toLowerCase() === 'true';\r\n","import { backgroundHandler } from './backgroundColor';\r\nimport { superScriptHandler } from './superScript';\r\nimport { subScriptHandler } from './subScript';\r\nimport { colorHandler } from './color';\r\nimport { StyleInterface, StyleOption } from './../types';\r\nimport { widthHandler } from './width';\r\nimport { verticalAlignHandler } from './verticalAlign';\r\nimport { textDecorationHandler } from './textDecoration';\r\nimport { paddingHandler } from './padding';\r\nimport { lineHeightHandler } from './lineHeight';\r\nimport { heightHandler } from './height';\r\nimport { alignHandler } from './textAlign';\r\nimport { boldHandler } from './bold';\r\nimport { borderColorHandler } from './borderColor';\r\nimport { fontFamilyHandler } from './fontFamily';\r\nimport { fontStyleHandler } from './fontStyle';\r\nimport { textIndentHandler } from './textIndent';\r\n\r\nimport {\r\n  isTextAlign,\r\n  isBold,\r\n  isColor,\r\n  isBorderColor,\r\n  isFontFamily,\r\n  isFontStyle,\r\n  isHeight,\r\n  isLineHeight,\r\n  isPadding,\r\n  isTextDecoration,\r\n  isTextIndent,\r\n  isVerticalAlign,\r\n  isWidth,\r\n  isBackgroundColor,\r\n  isSubScript,\r\n  isSuperScript,\r\n} from '../judge';\r\n\r\nexport const tokens = [\r\n  {\r\n    name: 'color',\r\n    judge: isColor,\r\n    handler: colorHandler,\r\n  },\r\n  {\r\n    name: 'backgroundColor',\r\n    judge: isBackgroundColor,\r\n    handler: backgroundHandler,\r\n  },\r\n  {\r\n    name: 'bold',\r\n    judge: isBold,\r\n    handler: boldHandler,\r\n  },\r\n  {\r\n    name: 'align',\r\n    judge: isTextAlign,\r\n    handler: alignHandler,\r\n  },\r\n  {\r\n    name: 'borderColor',\r\n    judge: isBorderColor,\r\n    handler: borderColorHandler,\r\n  },\r\n  {\r\n    name: 'fontFamily',\r\n    judge: isFontFamily,\r\n    handler: fontFamilyHandler,\r\n  },\r\n  {\r\n    name: 'fontStyle',\r\n    judge: isFontStyle,\r\n    handler: fontStyleHandler,\r\n  },\r\n  {\r\n    name: 'height',\r\n    judge: isHeight,\r\n    handler: heightHandler,\r\n  },\r\n  {\r\n    name: 'lineHeight',\r\n    judge: isLineHeight,\r\n    handler: lineHeightHandler,\r\n  },\r\n  {\r\n    name: 'padding',\r\n    judge: isPadding,\r\n    handler: paddingHandler,\r\n  },\r\n  {\r\n    name: 'textDecoration',\r\n    judge: isTextDecoration,\r\n    handler: textDecorationHandler,\r\n  },\r\n  {\r\n    name: 'textIndent',\r\n    judge: isTextIndent,\r\n    handler: textIndentHandler,\r\n  },\r\n  {\r\n    name: 'verticalAlign',\r\n    judge: isVerticalAlign,\r\n    handler: verticalAlignHandler,\r\n  },\r\n  {\r\n    name: 'width',\r\n    judge: isWidth,\r\n    handler: widthHandler,\r\n  },\r\n  {\r\n    name: 'subScript',\r\n    judge: isSubScript,\r\n    handler: subScriptHandler,\r\n  },\r\n  {\r\n    name: 'superScript',\r\n    judge: isSuperScript,\r\n    handler: superScriptHandler,\r\n  },\r\n];\r\n\r\nexport const provideStyle = (styles: StyleInterface[]) => {\r\n  let styleOption: StyleOption = {};\r\n\r\n  styles.forEach((style) => {\r\n    const token = tokens.find((token) => token.judge(style));\r\n    if (token) {\r\n      styleOption = token.handler(style, styleOption);\r\n    }\r\n  });\r\n\r\n  return styleOption;\r\n};\r\n","import { Node } from './types';\r\n\r\n// text node\r\nexport const isTextNode = (node: Node) => node && node.type === 'text';\r\n\r\n// text node with content\r\nexport const isFillTextNode = (node: Node) =>\r\n  node && node.type === 'text' && node.content;\r\n","import { TagType } from './../default';\r\nimport { CustomTagStyleMap, Node, StyleInterface, StyleOption } from '../types';\r\nimport {\r\n  D_FontSizePT,\r\n  D_TagStyleMap,\r\n  PXbyPT,\r\n  Splitter_Colon,\r\n  Splitter_Semicolon,\r\n} from '../default';\r\nimport {\r\n  ExternalHyperlink,\r\n  ImageRun,\r\n  IRunOptions,\r\n  ParagraphChild,\r\n  TextRun,\r\n} from 'docx';\r\nimport {\r\n  getImageBlob,\r\n  getUniqueArrayByKey,\r\n  isFilledArray,\r\n  isValidColor,\r\n  optimizeBlankSpace,\r\n  toHex,\r\n  typeOf,\r\n} from '../utils';\r\n\r\nimport { StyleMap } from '../token/styleMap';\r\nimport { handleSizeNumber } from '../utils';\r\nimport { provideStyle } from '../token';\r\nimport { isFillTextNode } from '../isNodeType';\r\n\r\n// convert styles to flat array\r\nexport const toFlatStyleList = (\r\n  styleStringList: string[]\r\n): StyleInterface[] => {\r\n  const inlined = styleStringList\r\n    .filter(Boolean)\r\n    .map((str) => str.split(`${Splitter_Semicolon}`))\r\n    .flat()\r\n    .filter((str) => str.indexOf(`${Splitter_Colon}`) > -1)\r\n    .map((attr) => {\r\n      const [key, val] = attr.trim().split(Splitter_Colon);\r\n      const v = typeOf(val) === 'string' ? val.trim().replace(/;/i, '') : val;\r\n      const value = isValidColor(v) ? toHex(v) : v;\r\n      return {\r\n        key: key.trim(),\r\n        val: value,\r\n      };\r\n    });\r\n\r\n  return getUniqueArrayByKey(inlined, 'key');\r\n};\r\n\r\n// text creator\r\nexport const calcTextRunStyle = (\r\n  styleList: string[],\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  const styleOption: Partial<StyleOption> = {};\r\n  if (!styleList || styleList.length === 0) return styleOption;\r\n  const tagList = Object.keys(tagStyleMap);\r\n\r\n  // handle tag style like: em del strong...\r\n  const tagStyleList: string[] = styleList.filter((str) =>\r\n    tagList.includes(str)\r\n  );\r\n\r\n  const inlined = tagStyleList\r\n    .map((str) => tagStyleMap[str as keyof typeof tagStyleMap])\r\n    .filter(Boolean) as string[];\r\n\r\n  // flat inline styles\r\n  const styles = toFlatStyleList([...styleList, ...inlined]);\r\n\r\n  const fontSizeSty = styles.find(\r\n    (sty: StyleInterface) => sty.key === StyleMap.fontSize\r\n  );\r\n\r\n  const fontSize =\r\n    fontSizeSty && fontSizeSty.val ? handleSizeNumber(fontSizeSty.val) : null;\r\n\r\n  /**\r\n   * size(halfPts): Set the font size, measured in half-points\r\n   */\r\n  if (fontSize) {\r\n    const { value, type } = fontSize;\r\n    const size = type === 'pt' ? value * 2 : value * PXbyPT * 2;\r\n    styleOption.size = size;\r\n  } else {\r\n    styleOption.size = D_FontSizePT * 2;\r\n  }\r\n\r\n  const inlinedStyleOption = provideStyle(styles);\r\n\r\n  return { ...styleOption, ...inlinedStyleOption };\r\n};\r\n\r\nexport const textCreator = (\r\n  node: Node,\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  const { shape, content } = node;\r\n\r\n  const textBuildParam = { text: optimizeBlankSpace(content) };\r\n\r\n  const styleOption =\r\n    shape && shape.length ? calcTextRunStyle(shape, tagStyleMap) : {};\r\n\r\n  return new TextRun({ ...textBuildParam, ...styleOption } as IRunOptions);\r\n};\r\n\r\n// map children as ParagraphChild\r\nexport const getChildrenByTextRun = async (\r\n  nodeList: Node[],\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n): Promise<ParagraphChild[]> => {\r\n  const texts: ParagraphChild[] = [];\r\n  const concatText = async (list: Node[], arr: ParagraphChild[]) => {\r\n    for (let node of list) {\r\n      if (isFillTextNode(node)) {\r\n        arr.push(textCreator(node, tagStyleMap));\r\n      } else if (node.name === TagType.img) {\r\n        const { attrs, shape } = node;\r\n        const { src, width = 100, height = 100 } = attrs;\r\n        const styleOp = calcTextRunStyle(shape);\r\n        if (src) {\r\n          try {\r\n            const imgBlob = await getImageBlob(String(src));\r\n            const image = new ImageRun({\r\n              data: imgBlob as unknown as ArrayBuffer,\r\n              transformation: {\r\n                width: styleOp.tWidth || Number(width),\r\n                height: styleOp.tHeight || Number(height),\r\n              },\r\n            });\r\n            arr.push(image);\r\n          } catch (e) {\r\n            console.log('download image error', e);\r\n          }\r\n        }\r\n      } else if (isFilledArray(node.children)) {\r\n        // deal with hyperlink\r\n        if (node.name === TagType.link) {\r\n          const { attrs } = node;\r\n          const text = new ExternalHyperlink({\r\n            children: await getChildrenByTextRun(node.children, tagStyleMap),\r\n            link: attrs.href ? String(attrs.href) : '',\r\n          });\r\n          arr.push(text);\r\n        } else {\r\n          await concatText(node.children, arr);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  await concatText(nodeList, texts);\r\n\r\n  return texts;\r\n};\r\n","import {\r\n  BorderStyle,\r\n  HeightRule,\r\n  ITableCellOptions,\r\n  ITableOptions,\r\n  Paragraph,\r\n  Table,\r\n  TableCell,\r\n  TableLayoutType,\r\n  TableRow,\r\n  WidthType,\r\n} from 'docx';\r\nimport { CellParam, CustomTagStyleMap, Node, TableParam } from '../types';\r\nimport {\r\n  D_CELL_MARGIN,\r\n  D_TableBorderColor,\r\n  D_TableBorderSize,\r\n  D_TableFullWidth,\r\n  DefaultBorder,\r\n} from '../default';\r\nimport { D_TableCellHeightPx, D_TagStyleMap } from './../default';\r\nimport { calcTextRunStyle, getChildrenByTextRun } from './text';\r\n\r\nimport { handleSizeNumber } from '../utils';\r\n\r\nexport const calcTableWidth = (colsArr: number[]) => {\r\n  return colsArr.reduce((prev, cur) => prev + cur, 0);\r\n};\r\n\r\nexport const getTableBorderStyleSingle = (size: number, color: string) => {\r\n  return { style: BorderStyle.SINGLE, size: size * 10, color: color };\r\n};\r\n\r\nconst tablePxByXDA = D_TableFullWidth / 553;\r\n\r\nexport const getColGroupWidth = (cols: Node[]) => {\r\n  const count = cols.length;\r\n  const defaultWidth = count ? D_TableFullWidth / tablePxByXDA / count : 0;\r\n  return cols\r\n    .filter((c) => c.name === 'col')\r\n    .map((col) => {\r\n      const { attrs } = col;\r\n      return (\r\n        tablePxByXDA *\r\n        (handleSizeNumber(String(attrs.width))?.value || defaultWidth)\r\n      );\r\n    });\r\n};\r\n\r\nexport const handleCellWidthFromColgroup = (\r\n  cols: number[],\r\n  index: number,\r\n  colspan: number\r\n) => {\r\n  return cols\r\n    .slice(index, index + colspan)\r\n    .reduce((prev, cur) => prev + cur, 0);\r\n};\r\n\r\nexport const getCellWidthInDXA = (size: number) => {\r\n  return size * tablePxByXDA;\r\n};\r\n\r\n// table node to docx ITableOptions\r\nexport const tableNodeToITableOptions = async (\r\n  tableNode: Node,\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n): Promise<ITableOptions | null> => {\r\n  const { children: tc, attrs, shape } = tableNode;\r\n\r\n  const isTBody = (n: Node) => n.name === 'tbody';\r\n  const tbody = tc.find(isTBody);\r\n  if (!tbody) return null;\r\n\r\n  // deal colgroup for cell width\r\n  const colGroup = tc.find((n) => n.name === 'colgroup');\r\n  const cols = colGroup ? getColGroupWidth(colGroup.children) : [];\r\n  // const colsTotalWidth = cols.reduce((prev, cur) => prev + cur, 0);\r\n\r\n  // Google DOCS does not support start and end borders, instead they use left and right borders.\r\n  // So to set left and right borders for Google DOCS you should use\r\n  // see https://docx.js.org/#/usage/tables\r\n  const tableParam: TableParam = {\r\n    layout: TableLayoutType.FIXED,\r\n    borders: {\r\n      top: DefaultBorder,\r\n      left: DefaultBorder,\r\n      right: DefaultBorder,\r\n      bottom: DefaultBorder,\r\n    },\r\n    rows: [],\r\n  };\r\n\r\n  const styleOp = calcTextRunStyle(shape, tagStyleMap);\r\n\r\n  const { border } = attrs;\r\n  const borderSize = border ? parseFloat(border as string) : D_TableBorderSize;\r\n  const borderColor = styleOp.borderColor || D_TableBorderColor;\r\n\r\n  const borders = {\r\n    top: getTableBorderStyleSingle(borderSize, borderColor),\r\n    right: getTableBorderStyleSingle(borderSize, borderColor),\r\n    bottom: getTableBorderStyleSingle(borderSize, borderColor),\r\n    left: getTableBorderStyleSingle(borderSize, borderColor),\r\n  };\r\n\r\n  tableParam.borders = borders;\r\n\r\n  const isTr = (n: Node) => n.name === 'tr';\r\n  const isTd = (n: Node) => n.name === 'td';\r\n\r\n  const firstRowColumnSize: number[] = [];\r\n  let hasColGroup = false;\r\n  const trs = tbody.children.filter(isTr);\r\n\r\n  const rows = [];\r\n\r\n  for (let { tr, idx } of trs.map((tr, idx) => ({ tr, idx }))) {\r\n    const { children, attrs } = tr;\r\n\r\n    let trHeight = attrs?.style\r\n      ? calcTextRunStyle([attrs?.style as string], tagStyleMap)?.tHeight ||\r\n        D_TableCellHeightPx\r\n      : D_TableCellHeightPx;\r\n\r\n    const tds = children.filter(isTd);\r\n\r\n    const cellChildren = [];\r\n\r\n    for (let tdObj of tds.map((item, index) => ({ item, index }))) {\r\n      const { item: td, index } = tdObj;\r\n      const { attrs, shape } = td;\r\n\r\n      // table paragraph use line-height 1.0 for default\r\n      const styles = { ...tagStyleMap };\r\n      delete styles.p;\r\n\r\n      const tdStyleOption = calcTextRunStyle(shape, styles);\r\n\r\n      // TODO: support Nested Tables and other elements\r\n      // use `contentBuilder` maybe better\r\n\r\n      const texts = [];\r\n      for (let t of td.children) {\r\n        const { shape, content, children } = t;\r\n        if (children?.length) {\r\n          const c = await getChildrenByTextRun(children || [], styles);\r\n          texts.push(\r\n            new Paragraph({\r\n              children: c,\r\n              ...calcTextRunStyle(shape, styles),\r\n            })\r\n          );\r\n        }\r\n        texts.push(\r\n          new Paragraph({\r\n            text: content,\r\n            ...calcTextRunStyle(shape, styles),\r\n          })\r\n        );\r\n      }\r\n\r\n      const cellParam: CellParam = {\r\n        children: texts,\r\n      };\r\n\r\n      const { colspan, rowspan } = attrs;\r\n      if (colspan && Number(colspan) !== 0) {\r\n        cellParam.columnSpan = Number(colspan);\r\n      }\r\n\r\n      if (rowspan && Number(rowspan) !== 0) {\r\n        cellParam.rowSpan = Number(rowspan);\r\n      }\r\n\r\n      hasColGroup = !!cols.length && cols.every((c) => c !== 0);\r\n\r\n      if (hasColGroup) {\r\n        const width = handleCellWidthFromColgroup(\r\n          cols,\r\n          index,\r\n          cellParam.columnSpan || 1\r\n        );\r\n        tdStyleOption.tWidth = width;\r\n      }\r\n\r\n      const cellWidth = hasColGroup\r\n        ? tdStyleOption.tWidth || D_TableFullWidth / cols.length\r\n        : getCellWidthInDXA(tdStyleOption.tWidth || 185);\r\n\r\n      cellParam.width = {\r\n        size: cellWidth,\r\n        type: WidthType.DXA,\r\n      };\r\n\r\n      if (idx === 0) {\r\n        if (cellParam.columnSpan) {\r\n          for (let i = 0; i < cellParam.columnSpan; i++) {\r\n            firstRowColumnSize.push(cellWidth / cellParam.columnSpan);\r\n          }\r\n        } else {\r\n          firstRowColumnSize.push(cellWidth);\r\n        }\r\n      }\r\n\r\n      const margins = {\r\n        marginUnitType: WidthType.DXA,\r\n        top: D_CELL_MARGIN,\r\n        bottom: D_CELL_MARGIN,\r\n        left: D_CELL_MARGIN,\r\n        right: D_CELL_MARGIN,\r\n      };\r\n\r\n      const tableCellOptions = {\r\n        ...cellParam,\r\n        ...calcTextRunStyle(shape, styles),\r\n        margins,\r\n      };\r\n\r\n      cellChildren.push(new TableCell(tableCellOptions as ITableCellOptions));\r\n    }\r\n\r\n    const para = {\r\n      children: cellChildren,\r\n      height: { value: 0, rule: HeightRule.EXACT },\r\n    };\r\n\r\n    const h = (trHeight ?? D_TableCellHeightPx) * tablePxByXDA;\r\n\r\n    para.height = { value: h, rule: HeightRule.EXACT };\r\n\r\n    rows.push(new TableRow(para));\r\n  }\r\n\r\n  const tableWidths = hasColGroup ? cols : firstRowColumnSize;\r\n  tableParam.columnWidths = tableWidths;\r\n\r\n  tableParam.width = {\r\n    size: calcTableWidth(tableWidths),\r\n    type: WidthType.DXA,\r\n  };\r\n  tableParam.rows = rows;\r\n  return tableParam;\r\n};\r\n\r\n// create docx table from table node\r\nexport const tableCreator = async (\r\n  tableNode: Node,\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  const tableParam = await tableNodeToITableOptions(tableNode, tagStyleMap);\r\n  if (!tableParam) return null;\r\n  return new Table(tableParam);\r\n};\r\n","import { Paragraph, ParagraphChild } from 'docx';\r\nimport { D_TagStyleMap, TagType } from '../default';\r\nimport { CustomTagStyleMap, Node } from '../types';\r\nimport { isFilledArray } from '../utils';\r\nimport { tableCreator } from './table';\r\nimport { calcTextRunStyle, getChildrenByTextRun } from './text';\r\n\r\nexport const contentBuilder = async (\r\n  node: Node,\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  const { type, name, children, content, shape } = node;\r\n\r\n  const para: { text: string; children: ParagraphChild[] } = {\r\n    text: content,\r\n    children: [],\r\n  };\r\n\r\n  const isText = type === TagType.text && content;\r\n  const isLink = name === TagType.link;\r\n  const isTable = name === TagType.table;\r\n  const isList = name === TagType.ordered_list || name === TagType.unordered_list;\r\n\r\n  const isNormalParagraphWithChildren =\r\n    !isLink &&\r\n    !isTable &&\r\n    !isList &&\r\n    children &&\r\n    isFilledArray(children) &&\r\n    children.length > 0;\r\n\r\n  if (isText) {\r\n    const paragraphOption = {\r\n      ...para,\r\n      ...calcTextRunStyle(shape, tagStyleMap),\r\n    };\r\n    return new Paragraph(paragraphOption);\r\n  } else if (isNormalParagraphWithChildren) {\r\n    para.children = await getChildrenByTextRun(children, tagStyleMap);\r\n    const paragraphOption = {\r\n      ...para,\r\n      ...calcTextRunStyle(shape, tagStyleMap),\r\n    };\r\n    return new Paragraph(paragraphOption);\r\n  } else if (isTable) {\r\n    const table = await tableCreator(node, tagStyleMap);\r\n    return table;\r\n  } else if(isList) {\r\n    return null;\r\n  }\r\n  else {\r\n    return null;\r\n  }\r\n};\r\n","import {\r\n  CustomTagStyleMap,\r\n  HTMLString,\r\n  IExportDoc,\r\n  IExportOption,\r\n  Node,\r\n} from './types';\r\nimport { D_Layout, D_TagStyleMap } from './default';\r\nimport { Document, Footer, Header, Packer, Paragraph } from 'docx';\r\n\r\nimport { isFilledArray, trimHtml, calcMargin } from './utils';\r\nimport { tableNodeToITableOptions } from './builder/table';\r\n\r\nimport JSZip from 'jszip';\r\nimport { parse } from 'html-to-ast';\r\nimport { saveAs } from 'file-saver';\r\nimport { contentBuilder } from './builder';\r\n\r\nexport const getInnerTextNode = (node: Node) => {\r\n  let inner = node;\r\n  while (inner && inner.children && inner.children.length === 1) {\r\n    inner = inner.children[0];\r\n  }\r\n  return inner;\r\n};\r\n\r\n// recursion chain style\r\nexport const chainStyle = (\r\n  nodeList: Node[],\r\n  style: string[] = [],\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  if (!nodeList || !isFilledArray(nodeList)) return;\r\n\r\n  nodeList.forEach((node) => {\r\n    const { attrs, children, name } = node;\r\n    let STYLE: string[] =\r\n      typeof attrs?.style === 'string' ? [attrs.style, ...style] : style;\r\n\r\n    const shape = name ? [name, ...STYLE] : [...STYLE];\r\n    node.shape = shape;\r\n\r\n    if (isFilledArray(children)) {\r\n      chainStyle(children, shape, tagStyleMap);\r\n    }\r\n  });\r\n};\r\n\r\n// style builder\r\nexport const StyleBuilder = (\r\n  list: Node[],\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n) => {\r\n  const nList = [...list];\r\n  chainStyle(nList, [], tagStyleMap);\r\n  return nList;\r\n};\r\n\r\n// element creator\r\nexport const ElementCreator = async (\r\n  astList: Node[],\r\n  tagStyleMap: CustomTagStyleMap = D_TagStyleMap\r\n): Promise<Paragraph[]> => {\r\n  if (!astList || astList.length === 0) return [];\r\n  const tags = StyleBuilder(\r\n    astList.filter((n: Node) => n.type === 'tag'),\r\n    tagStyleMap\r\n  );\r\n  if (!tags) return [];\r\n\r\n  const ps: Paragraph[] = [];\r\n  for (let node of tags) {\r\n    const p = await contentBuilder(node, tagStyleMap);\r\n    if (p) {\r\n      ps.push(p as Paragraph);\r\n    }\r\n  }\r\n  // const ps = tags\r\n  //   .map((node: Node) => {\r\n  //     return contentBuilder(node, tagStyleMap);\r\n  //   })\r\n  //   .filter(Boolean);\r\n  return [...ps] as Paragraph[];\r\n};\r\n\r\n// parse html string into Node list\r\nexport const htmlToAST = (html: string): Node[] => {\r\n  return parse(html) as Node[];\r\n};\r\n\r\n// generate Document\r\nexport const genDocument = async (\r\n  html: HTMLString,\r\n  options?: IExportOption\r\n) => {\r\n  const layoutOp = options?.layout || {};\r\n  const layout = { ...D_Layout, ...layoutOp };\r\n\r\n  const styleMap = options?.tagStyleMap || D_TagStyleMap;\r\n\r\n  const ast: Node[] = htmlToAST(html);\r\n\r\n  const paragraphs = await ElementCreator(ast, styleMap);\r\n  const {\r\n    orientation,\r\n    topMargin,\r\n    leftMargin,\r\n    rightMargin,\r\n    bottomMargin,\r\n    header,\r\n    footer,\r\n  } = layout;\r\n\r\n  const margin = {\r\n    top: calcMargin(topMargin),\r\n    left: calcMargin(leftMargin),\r\n    right: calcMargin(rightMargin),\r\n    bottom: calcMargin(bottomMargin),\r\n  };\r\n\r\n  const page = {\r\n    margin,\r\n    size: {\r\n      orientation,\r\n    },\r\n  };\r\n\r\n  const section = {\r\n    properties: {\r\n      page,\r\n    },\r\n    children: paragraphs,\r\n    headers: {},\r\n    footers: {},\r\n  };\r\n\r\n  if (header) {\r\n    const ast = parse(header) as Node[];\r\n\r\n    section.headers = {\r\n      default: new Header({\r\n        children: await ElementCreator(ast, styleMap),\r\n      }),\r\n    };\r\n  }\r\n\r\n  if (footer) {\r\n    const ast = parse(footer) as Node[];\r\n    section.footers = {\r\n      default: new Footer({\r\n        children: await ElementCreator(ast, styleMap),\r\n      }),\r\n    };\r\n  }\r\n\r\n  const doc = new Document({\r\n    styles: {\r\n      paragraphStyles: [],\r\n    },\r\n    sections: [section],\r\n  });\r\n  return doc;\r\n};\r\n\r\n// export html as docx file\r\nexport const exportAsDocx = async (doc: Document, docName = '') => {\r\n  Packer.toBlob(doc).then((blob) => {\r\n    saveAs(blob, `${docName}.docx`);\r\n  });\r\n};\r\n\r\n// html -> docx\r\nexport const exportHtmlToDocx = async (\r\n  html: HTMLString,\r\n  docName = 'doc',\r\n  options?: IExportOption\r\n) => {\r\n  const doc = await genDocument(trimHtml(html), options);\r\n  exportAsDocx(doc, docName);\r\n  return doc;\r\n};\r\n\r\n// export multi files as .zip\r\nexport const exportMultiDocsAsZip = async (\r\n  docList: IExportDoc[],\r\n  fileName = 'docs',\r\n  export_option?: IExportOption\r\n) => {\r\n  const zip = new JSZip();\r\n  const len = docList.length;\r\n  if (len === 1) {\r\n    const d = docList[0];\r\n    const { html, name, option } = d;\r\n    const file = await genDocument(trimHtml(html), option || export_option);\r\n    exportAsDocx(file, name);\r\n    return;\r\n  }\r\n  for (let docFile of docList) {\r\n    const { html, name, option } = docFile;\r\n    const doc = await genDocument(trimHtml(html), option || export_option);\r\n    const file = await Packer.toBlob(doc);\r\n    zip.file(`${name}.docx`, file);\r\n  }\r\n\r\n  zip.generateAsync({ type: 'blob' }).then((content) => {\r\n    saveAs(content, `${fileName}.zip`);\r\n  });\r\n};\r\n\r\nexport const exportAsZip = exportMultiDocsAsZip;\r\n\r\nexport { IExportDoc, IExportOption };\r\n\r\nexport { parse, tableNodeToITableOptions, D_Layout, D_TagStyleMap };\r\n"],"names":["Splitter_Colon","Splitter_Semicolon","PXbyTWIPS","PXbyPT","D_FontSizePX","D_FontSizePT","D_LineHeight","D_TableFullWidth","D_TableBorderColor","D_CELL_MARGIN","D_TableBorderSize","D_TableCellHeightPx","AlignMap","left","AlignmentType","LEFT","center","CENTER","right","RIGHT","hyperlinkColor","D_TagStyleMap","p","strong","em","u","del","h1","h2","h3","h4","h5","h6","sub","sup","a","D_Layout","bottomMargin","leftMargin","rightMargin","topMargin","orientation","PageOrientation","PORTRAIT","Direction","firstLine","start","end","hanging","PaddingDirection","Size","px","pt","SingleLine","type","color","TagType","table","link","text","img","ordered_list","unordered_list","DefaultBorder","style","BorderStyle","SINGLE","size","verticalAlignMap","top","VerticalAlign","TOP","middle","bottom","BOTTOM","typeOf","obj","toString","Object","prototype","map","call","isFilledArray","arr","Array","isArray","length","getUniqueArrayByKey","uniqueKey","isEveryObject","every","item","hash","reduce","next","k","includes","push","removeTagDIV","str","reg","replace","escape2Html","arrEntities","lt","gt","nbsp","amp","quot","_","t","trimHtml","deepCopyByJSON","JSON","parse","stringify","isValidColor","tinycolor","isValid","toHex","toHexString","handleSizeNumber","val","m","match","target","RegExp","value","parseFloat","numberCM","toUpperCase","calcMargin","margin","convertMillimetersToTwip","optimizeBlankSpace","content","ratio","textWithoutBlank","trimEnd","blank","slice","optimizedBlank","fill","join","getImageBlob","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","src","blob","wrap","_callee$","_context","prev","fetch","then","res","sent","abrupt","stop","_x","apply","arguments","StyleMap","fontFamily","textAlign","paddingRight","paddingLeft","lineHeight","fontSize","backgroundColor","textDecoration","textIndent","borderColor","height","width","fontWeight","verticalAlign","lineThrough","underline","fontStyle","subScript","superScript","backgroundHandler","styleOp","styleOption","shading","ShadingType","CLEAR","superScriptHandler","subScriptHandler","colorHandler","widthHandler","w","tWidth","verticalAlignHandler","textDecorationHandler","strike","paddingHandler","key","dire","_handleSizeNumber","indent","oneCharSizePT","isEM","isPX","isPT","indentValue","lineHeightHandler","spacing","lineHeightToSpace","isPx","toLowerCase","isPr","lineHeightVal","isNoSpacing","s","line","lineRule","LineRuleType","AUTO","heightHandler","h","tHeight","alignHandler","alignment","boldHandler","bold","borderColorHandler","fontFamilyHandler","indexOf","font","fontStyleHandler","italics","textIndentHandler","isColor","isBackgroundColor","_ref2","isTextDecoration","_ref3","isPadding","_ref4","isTextAlign","_ref5","isLineHeight","_ref6","isFontFamily","_ref7","isVerticalAlign","_ref8","isBorderColor","_ref9","isWidth","_ref10","isHeight","_ref11","isTextIndent","_ref12","isBold","_ref14","isFontStyle","_ref15","isSubScript","_ref17","isSuperScript","_ref18","tokens","name","judge","handler","provideStyle","styles","forEach","token","find","isFillTextNode","node","toFlatStyleList","styleStringList","inlined","filter","Boolean","split","flat","attr","_attr$trim$split","trim","v","calcTextRunStyle","styleList","tagStyleMap","tagList","keys","tagStyleList","concat","fontSizeSty","sty","inlinedStyleOption","_extends","textCreator","shape","textBuildParam","TextRun","getChildrenByTextRun","_callee2","nodeList","texts","concatText","list","_iterator","_step","attrs","_attrs$width","_attrs$height","imgBlob","image","_attrs","_createForOfIteratorHelperLoose","done","String","ImageRun","data","transformation","Number","t0","console","log","children","t1","ExternalHyperlink","t2","t3","href","t4","_x3","_x4","_context2","_x2","calcTableWidth","colsArr","cur","getTableBorderStyleSingle","tablePxByXDA","getColGroupWidth","cols","count","defaultWidth","c","col","handleCellWidthFromColgroup","index","colspan","getCellWidthInDXA","tableNodeToITableOptions","tableNode","tc","isTBody","n","tbody","colGroup","tableParam","layout","TableLayoutType","FIXED","borders","rows","border","borderSize","isTr","isTd","firstRowColumnSize","hasColGroup","trs","tr","idx","_step$value","trHeight","_calcTextRunStyle","tds","cellChildren","_iterator2","_step2","tdObj","td","tdStyleOption","_iterator3","_step3","Paragraph","cellParam","rowspan","columnSpan","rowSpan","cellWidth","WidthType","DXA","i","margins","marginUnitType","tableCellOptions","TableCell","para","rule","HeightRule","EXACT","TableRow","tableWidths","columnWidths","tableCreator","Table","contentBuilder","isText","isLink","isTable","isList","isNormalParagraphWithChildren","paragraphOption","getInnerTextNode","inner","chainStyle","STYLE","StyleBuilder","nList","ElementCreator","astList","tags","ps","htmlToAST","html","genDocument","options","layoutOp","styleMap","ast","paragraphs","header","footer","page","section","_ast","_ast2","doc","_callee2$","properties","headers","footers","Header","Footer","t5","t6","t7","Document","paragraphStyles","sections","exportAsDocx","_callee3","docName","_callee3$","_context3","Packer","toBlob","saveAs","_x5","_x6","exportHtmlToDocx","_callee4","_callee4$","_context4","_x7","_x8","_x9","exportMultiDocsAsZip","_callee5","docList","fileName","export_option","zip","len","d","option","file","docFile","_html","_name","_option","_file","_callee5$","_context5","JSZip","generateAsync","_x10","_x11","_x12","exportAsZip"],"mappings":"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"}